######################################
TEHTÄVÄ 1:
######################################

// ---------- tehtava1.java ----------
package test.viikko7;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.*;
import javafx.stage.Stage;
public class tehtava1 extends Application {

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage lava) {

        // Tämä on valotolpan koko. Jäänne valotolppa-tehtävästä aiemmalta viikolta.
        // Voit kokeilla muuttaa tätä.
        int koko = 20;

        // Luodaan olio luokasta tehtava1_valotolppa ja käytetään sen
        // getValotolppa-metodia, jolla saadaan pääohjelmaan liikennevalot
        // StackPane-muodossa.
        tehtava1_valotolppa valotolppaOlio = new tehtava1_valotolppa(koko);
        StackPane valotolppa = new StackPane(valotolppaOlio.getValotolppa());

        // Luodaan napit, nappiryhmä, paneeli napeille ja liitetään paneeliin.
        RadioButton nappiPun = new RadioButton("Punainen");
        RadioButton nappiKelt = new RadioButton("Keltainen");
        RadioButton nappiVihr = new RadioButton("Vihreä");
        RadioButton nappiJoku = new RadioButton("Joku");
        VBox nappiPaneeli = new VBox();
        nappiPaneeli.setPadding(new Insets(50,50,50,50));
        nappiPaneeli.setSpacing(10);
        nappiPaneeli.getChildren().addAll(nappiPun, nappiKelt, nappiVihr, nappiJoku);

        ToggleGroup nappiRyhma = new ToggleGroup();
        nappiPun.setToggleGroup(nappiRyhma);
        nappiKelt.setToggleGroup(nappiRyhma);
        nappiVihr.setToggleGroup(nappiRyhma);
        nappiJoku.setToggleGroup(nappiRyhma);

        // Nappien toiminnallisuus
        nappiPun.setOnAction(e -> valotolppaOlio.setPunainen());
        nappiKelt.setOnAction(e -> valotolppaOlio.setKeltainen());
        nappiVihr.setOnAction(e -> valotolppaOlio.setVihrea());
        nappiJoku.setOnAction(e -> valotolppaOlio.setRandom());

        // Asetellaan kaikki lopullisesti paikoilleen.
        BorderPane finalPane = new BorderPane();
        finalPane.setCenter(valotolppa);
        finalPane.setLeft(nappiPaneeli);
        nappiPaneeli.setAlignment(Pos.CENTER_LEFT);

        Scene kehys = new Scene(finalPane, (koko*10)+200,koko*20);
        lava.setScene(kehys);
        lava.setTitle("Aseta liikennevalo");
        lava.show();
    }
}


// ---------- tehtava1_valotolppa.java ----------
package test.viikko7;

import javafx.geometry.Pos;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import java.util.concurrent.ThreadLocalRandom;

public class tehtava1_valotolppa {
    // Luodaan nämä ennen alustajaa, jotta näihin voidaan viitata myöhemmissä
    // metodeissa.
    StackPane valotolppa = new StackPane();
    Circle ympyraPun = new Circle();
    Circle ympyraKelt = new Circle();
    Circle ympyraVihr = new Circle();
    public tehtava1_valotolppa(int koko) {
        ympyraPun.setRadius(koko);
        ympyraPun.setStroke(Color.BLACK);
        ympyraPun.setFill(Color.RED);

        ympyraKelt.setRadius(koko);
        ympyraKelt.setStroke(Color.BLACK);
        ympyraKelt.setFill(Color.YELLOW);

        ympyraVihr.setRadius(koko);
        ympyraVihr.setStroke(Color.BLACK);
        ympyraVihr.setFill(Color.GREEN);

        // Sijoitetaan pallot päällekkäin ja keskelle ruutua.
        VBox vertikaaliPallot = new VBox(koko/2);
        vertikaaliPallot.setAlignment(Pos.CENTER); // Ilman tätä pallot sijoittuvat vasempaan yläkulmaan.
        vertikaaliPallot.getChildren().addAll(ympyraPun, ympyraKelt, ympyraVihr);

        // Luodaan laatikko, joka tulee valojen ympärille.
        Rectangle laatikko = new Rectangle(
                koko*3,
                koko*8,
                Color.WHITE);
        laatikko.setStroke(Color.BLACK);

        // Luodaan laatikon ja pallojen muodostama "yläosa".
        Pane laatikkoJaPallot = new StackPane();
        laatikkoJaPallot.getChildren().addAll(laatikko, vertikaaliPallot);

        // Valotolpan jalka. Tämän koko suhteessa yläosaan on saatu kokeilemalla.
        Rectangle jalka = new Rectangle(
                laatikko.getWidth()/3,
                laatikko.getHeight()/5*4,
                Color.BROWN);
        jalka.setStroke(Color.BLACK);

        // Sijoitetaan valotolpan yläosa ja jalka päällekkäin.
        VBox valotolppaVBox = new VBox();
        valotolppaVBox.getChildren().addAll(laatikkoJaPallot, jalka);
        valotolppaVBox.setAlignment(Pos.CENTER);

        // Sijoitetaan vielä VBox StackPanen sisälle, jotta ne pysyvät keskenään
        // paikoillaan. StackPane on nyt valmis palautettavaksi seuraavassa metodissa.
        valotolppa.getChildren().addAll(valotolppaVBox);
    }

    public StackPane getValotolppa() {  return valotolppa;  }

    public StackPane setPunainen() {
        ympyraPun.setFill(Color.RED);
        ympyraKelt.setFill(Color.BLACK);
        ympyraVihr.setFill(Color.BLACK);
        return valotolppa;
    }
    public StackPane setKeltainen() {
        ympyraPun.setFill(Color.BLACK);
        ympyraKelt.setFill(Color.YELLOW);
        ympyraVihr.setFill(Color.BLACK);
        return valotolppa;
    }
    public StackPane setVihrea() {
        ympyraPun.setFill(Color.BLACK);
        ympyraKelt.setFill(Color.BLACK);
        ympyraVihr.setFill(Color.GREEN);
        return valotolppa;
    }
    public void setRandom() {
        // Luodaan satunnainen luku väliltä [1,4[
        int arpa = ThreadLocalRandom.current().nextInt(1, 4);

        if (arpa == 1) this.setPunainen();
        else if (arpa == 2) this.setKeltainen();
        else if (arpa == 3) this.setVihrea();
    }
}

######################################
TEHTÄVÄ 2:
######################################
// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 



######################################
TEHTÄVÄ 3:
######################################

// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 


######################################
TEHTÄVÄ 4:
######################################

// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 



######################################
TEHTÄVÄ 5:
######################################

// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 


######################################
TEHTÄVÄ 6:
######################################

// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 



######################################
TEHTÄVÄ 7:
######################################

// ---------- Kurssi.java ----------

// ---------- Main.java ---------- 

